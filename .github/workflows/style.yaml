name: style
on:
  push:
    branches:
      - main
      - release**
  pull_request:
    branches:
      - main
      - release**
defaults:
  run:
    shell: bash
jobs:
  mypy:
    name: mypy
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.13'

      # Install uv - this needs to happen before any uv commands are used
      - name: Install uv
        uses: astral-sh/setup-uv@v1 # Use the latest stable version of setup-uv action

      # Cache dependencies - uv has its own cache. We'll cache uv's specific cache directory.
      - name: Cache uv dependencies
        uses: actions/cache@v4.2.3
        id: cache-uv
        with:
          path: ~/.cache/uv # uv's default cache path on Linux/macOS
          key: ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-mypy-uv-${{ hashFiles('requirements/required.txt', 'requirements/datasets.txt', 'requirements/models.txt', 'requirements/style.txt', 'requirements/tests.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-mypy-uv-

      - name: Install uv dependencies
        if: steps.cache.outputs.cache-hit != 'true' # The cache hit logic might still be useful for initial download of uv's cache
        run: |
          uv pip install -r requirements/required.txt -r requirements/datasets.txt -r requirements/models.txt -r requirements/style.txt -r requirements/tests.txt
          # Removed pip cache purge - not needed for uv's internal caching

      - name: List uv dependencies
        run: uv pip list
      - name: Run mypy checks
        run: mypy .
  ruff:
    name: ruff
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.13'

      # Install uv
      - name: Install uv
        uses: astral-sh/setup-uv@v1

      # Cache dependencies - for ruff, adjust path and key for uv
      - name: Cache uv dependencies (ruff)
        uses: actions/cache@v4.2.3
        id: cache-uv-ruff
        with:
          path: ~/.cache/uv # uv's default cache path
          key: ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-ruff-uv-${{ hashFiles('requirements/style.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-ruff-uv-

      - name: Install uv dependencies (ruff)
        if: steps.cache.outputs.cache-hit != 'true' # Cache hit logic
        run: |
          uv pip install -r requirements/style.txt
          # Removed pip cache purge

      - name: List uv dependencies
        run: uv pip list
      - name: Run ruff checks
        run: |
          ruff check --output-format=github --no-fix .
          ruff format --diff
  prettier:
    name: prettier
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: Set up nodejs
        uses: actions/setup-node@v4.4.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - name: Installing prettier
        run: |
          npm install
          npm cache clean --force
      - name: List npm dependencies
        run: npm ls --all
      - name: Run prettier formatting
        run: npx prettier --check .
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
name: style
on:
  push:
    branches:
    - main
    - release**
  pull_request:
    branches:
    - main
    - release**
jobs:
  black:
    name: black
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v4.1.1
    - name: Set up python
      uses: actions/setup-python@v4.7.1
      with:
        python-version: '3.11'
    - name: Cache dependencies
      uses: actions/cache@v3.3.2
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements/style.txt') }}
    - name: Install pip dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pip install -r requirements/style.txt
        pip cache purge
    - name: List pip dependencies
      run: pip list
    - name: Run black checks
      run: black . --check --diff
  flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v4.1.1
    - name: Set up python
      uses: actions/setup-python@v4.7.1
      with:
        python-version: '3.11'
    - name: Cache dependencies
      uses: actions/cache@v3.3.2
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements/style.txt') }}
    - name: Install pip dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pip install -r requirements/style.txt
        pip cache purge
    - name: List pip dependencies
      run: pip list
    - name: Run flake8 checks
      run: flake8
  isort:
    name: isort
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v4.1.1
    - name: Set up python
      uses: actions/setup-python@v4.7.1
      with:
        python-version: '3.11'
    - name: Cache dependencies
      uses: actions/cache@v3.3.2
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements/style.txt') }}
    - name: Install pip dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pip install -r requirements/style.txt
        pip cache purge
    - name: List pip dependencies
      run: pip list
    - name: Run isort checks
      run: isort . --check --diff
  pydocstyle:
    name: pydocstyle
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v4.1.1
    - name: Set up python
      uses: actions/setup-python@v4.7.1
      with:
        python-version: '3.11'
    - name: Cache dependencies
      uses: actions/cache@v3.3.2
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements/style.txt') }}
    - name: Install pip dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pip install -r requirements/style.txt
        pip cache purge
    - name: List pip dependencies
      run: pip list
    - name: Run pydocstyle checks
      run: pydocstyle
  pyupgrade:
    name: pyupgrade
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v4.1.1
    - name: Set up python
      uses: actions/setup-python@v4.7.1
      with:
        python-version: '3.11'
    - name: Cache dependencies
      uses: actions/cache@v3.3.2
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements/style.txt') }}
    - name: Install pip dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pip install -r requirements/style.txt
        pip cache purge
    - name: List pip dependencies
      run: pip list
    - name: Run pyupgrade checks
      run: pyupgrade --py39-plus $(find . -path ./docs/src -prune -o -name "*.py" -print)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
  cancel-in-progress: true

name: release
on:
  push:
    branches:
      - release**
  pull_request:
    branches:
      - release**
defaults:
  run:
    shell: bash
jobs:
  integration:
    name: integration
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v1
      - name: Cache uv dependencies
        uses: actions/cache@v4.2.3
        id: cache
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-
      - name: Install uv dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install .[datasets,tests]
      - name: List uv dependencies
        run: uv pip list
      - name: Run integration checks
        run: |
          pytest -m slow --durations=10 tests/samplers
          pytest -m slow --durations=10 tests/trainers
          python -m torchgeo --help
          torchgeo --help
  notebooks:
    name: notebooks
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v1
      - name: Cache uv dependencies
        uses: actions/cache@v4.2.3
        id: cache
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-tutorials-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-tutorials-
      - name: Install uv dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install .[docs,tests] planetary_computer pystac tensorboard h5py scikit-learn
      - name: List uv dependencies
        run: uv pip list
      - name: Run notebook checks
        run: pytest --nbmake --durations=10 docs/tutorials
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
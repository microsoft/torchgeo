name: tests
on:
  push:
    branches:
    - main
    paths:
    - '**.py'
    - 'pyproject.toml'
    - 'requirements.txt'
    - '.github/workflows/tests.yaml'
  pull_request:
    branches:
    - main
    paths:
    - '**.py'
    - 'pyproject.toml'
    - 'requirements.txt'
    - '.github/workflows/tests.yaml'
jobs:
  mypy:
    name: mypy
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt-get install libgeos-dev libproj-dev # needed for cartopy
        pip install cython numpy  # needed for pycocotools
        pip install --pre -r requirements.txt
    - name: Run mypy checks
      run: mypy .
  pytest:
    name: pytest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - name: Clone repo
      uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          # All OSes
          ~/conda_pkgs_dir
          # Linux
          ~/.cache/pip
          /var/cache/apt/archives
          # macOS
          ~/Library/Caches/pip
          ~/Library/Caches/Homebrew
          # Windows
          ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-python-${{ matrix.python-version }}-
    - name: Install apt dependencies
      run: sudo apt-get install libgeos-dev libproj-dev unrar
      if: ${{ runner.os == 'Linux' }}
    - name: Install brew dependencies
      run: brew install geos pkg-config proj rar
      if: ${{ runner.os == 'macOS' }}
    - name: Install conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
      if: ${{ runner.os == 'Windows' }}
    - name: Install conda dependencies
      run: conda install -c conda-forge cartopy h5py 'rasterio>=1.0'
      if: ${{ runner.os == 'Windows' }}
    - name: Install pip dependencies
      run: |
        pip install cython numpy  # needed for pycocotools
        pip install --pre -r requirements.txt
    - name: Run pytest checks
      run: pytest --cov=. --cov-report=term-missing

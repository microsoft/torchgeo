name: tests
on:
  push:
    branches:
      - main
      - release**
  pull_request:
    branches:
      - main
      - release**
defaults:
  run:
    shell: bash
jobs:
  latest:
    name: latest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12', '3.13']
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v1
      - name: Cache uv dependencies
        uses: actions/cache@v4.2.3
        id: cache
        with:
          path: ${{ runner.os == 'Windows' && '~\AppData\Local\uv\cache' || '~/.cache/uv' }}
          key: ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-${{ hashFiles('requirements/required.txt', 'requirements/datasets.txt', 'requirements/models.txt', 'requirements/tests.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-
      - name: Install uv dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install -r requirements/required.txt -r requirements/datasets.txt -r requirements/models.txt -r requirements/tests.txt
      - name: List uv dependencies
        run: uv pip list
      - name: Run pytest checks
        run: |
          pytest --cov=torchgeo --cov-report=xml
          python3 -m torchgeo --help
      - name: Report coverage
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  minimum:
    name: minimum
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.11'
      - name: Install uv
        uses: astral-sh/setup-uv@v1
      - name: Cache uv dependencies
        uses: actions/cache@v4.2.3
        id: cache
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-${{ hashFiles('requirements/min-reqs.old') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-
      - name: Install uv dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install -r requirements/min-reqs.old
      - name: List uv dependencies
        run: uv pip list
      - name: Run pytest checks
        run: |
          pytest --cov=torchgeo --cov-report=xml
          python3 -m torchgeo --help
      - name: Report coverage
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  optional:
    name: optional
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v1
      - name: Cache uv dependencies
        uses: actions/cache@v4.2.3
        id: cache
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-${{ hashFiles('requirements/required.txt', 'requirements/tests.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-Python-${{ steps.setup-python.outputs.python-version }}-uv-
      - name: Install uv dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install -r requirements/required.txt -r requirements/tests.txt
      - name: List uv dependencies
        run: uv pip list
      - name: Run pytest checks
        run: |
          pytest --cov=torchgeo --cov-report=xml
          python3 -m torchgeo --help
      - name: Report coverage
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
